#!/usr/bin/env python3

import json
import pathlib
import subprocess
import sys
import logging

logging.basicConfig(level='DEBUG')
logger = logging.getLogger(__name__)

REQUIREMENTS_FILE = pathlib.Path("~/foo/dotfiles/requirements.txt").expanduser()

UPGRADE_PIP_COMMAND = "python3 -m pip install --user --upgrade pip".split(" ")
LIST_OUTDATED_PACKAGES_IN_JSON_COMMAND = "python3 -m pip list --format=json -o --user".split(" ")
UPGRADE_PACKAGES_COMMAND = "python3 -m pip install -U --user -r /dev/stdin".split(" ")
INSTALL_WANTED_PACKAGES_COMMAND = (
    "python3 -m pip install -U --user -r {REQUIREMENTS_FILE}"
    .format(REQUIREMENTS_FILE=REQUIREMENTS_FILE)
    .split(" ")
)

def main():
    subprocess.Popen(UPGRADE_PIP_COMMAND).wait()

    pip_list_json = subprocess.Popen(
        LIST_OUTDATED_PACKAGES_IN_JSON_COMMAND,
        stdout=subprocess.PIPE,
    ).stdout.read()

    package_names = [n["name"] for n in json.loads(pip_list_json.decode("UTF-8"))]

    logger.debug("Outdated package list: %s", package_names)

    upgrade_packages_process = subprocess.Popen(
        UPGRADE_PACKAGES_COMMAND,
        stdin=subprocess.PIPE,
    )

    upgrade_packages_process.stdin.writelines(package_names)

    upgrade_packages_process.stdin.close()
    upgrade_packages_process.wait()


    install_wanted_packages_process = subprocess.Popen(
        INSTALL_WANTED_PACKAGES_COMMAND,
    ).wait()


if __name__ == "__main__":
    main()
